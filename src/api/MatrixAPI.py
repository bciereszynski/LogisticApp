import requests
import time
'''
Proxy class to operate api calls, in case of api change make code changes only here
'''
class MatrixAPI:

    def __init__(self):
        self.requestPoints = None
        self.response = None
        self.url = "https://trueway-matrix.p.rapidapi.com/CalculateDrivingMatrix"
        self.key = "6daf7a1653msh163f00b78136335p13cdfajsn22dd609d0a86"
        self.host = "trueway-matrix.p.rapidapi.com"
    def __get_response(self, points, mode='drive'):
        headers = {
            "X-RapidAPI-Key": self.key,
            "X-RapidAPI-Host": self.host
        }
        points_string=""
        for point in points:
            points_string += str(point) + ';'
        points_string = points_string[:-1]
        querystring = {"origins": points_string,
                       "destinations": points_string}

        response = requests.request(
            "GET", self.url, headers=headers, params=querystring)
        return response

    def get_distances_map(self, points):
        # if self.requestPoints != points:
        #     self.requestPoints = points
        #     self.response = self.__get_response(points)

        #distancesMatrix = self.response.json()['distances']

        distancesMatrix = [[0, 7193, 12377, 4858, 11174, 8736, 6803, 2517, 9160, 5596, 5017, 8197, 5139, 3737, 8078, 7279, 6101, 5819, 6836, 4212], [6585, 0, 10275, 7245, 6741, 2985, 2081, 5214, 3738, 2159, 3086, 6121, 2899, 3055, 2657, 2297, 1416, 1960, 1562, 3204], [13400, 10650, 0, 9908, 3463, 9089, 7829, 14145, 5762, 7342, 8146, 6610, 6918, 10656, 9081, 5643, 6532, 12134, 10235, 12618], [5528, 7047, 9499, 0, 8296, 9410, 6519, 6272, 10625, 6031, 5679, 5318, 6043, 4411, 8751, 7318, 6537, 8214, 7509, 7545], [11226, 6276, 4563, 7735, 0, 5618, 4329, 11970, 4038, 3841, 4878, 4436, 3883, 5987, 5610, 4086, 5406, 7598, 5472, 13243], [8822, 1981, 9350, 8500, 7007, 0, 3336, 6447, 2730, 3414, 4341, 7781, 5898, 4310, 1649, 3428, 2672, 3144, 1566, 4437], [5326, 2819, 8546, 5985, 5916, 5183, 0, 4276, 5606, 1471, 1686, 5433, 2212, 2460, 4524, 4110, 1977, 3602, 3282, 4658], [2487, 4948, 13851, 6332, 12648, 6334, 4401, 0, 6757, 4479, 3308, 9671, 4785, 2426, 5675, 5262, 4380, 3575, 4433, 2070], [9218, 3967, 5410, 10601, 4283, 2142, 4713, 6855, 0, 3922, 5213, 7302, 4935, 5688, 2134, 3338, 4049, 5289, 3164, 6586], [5631, 2470, 7075, 6019, 4445, 4167, 487, 4379, 4590, 0, 1492, 4354, 1312, 3212, 3507, 1772, 1044, 3657, 2266, 4761], [5085, 3024, 7948, 5744, 5620, 5454, 2081, 4594, 5387, 1825, 0, 4590, 1368, 2219, 4795, 3507, 2330, 3807, 3554, 3740], [9657, 6362, 4182, 6165, 2977, 6887, 4698, 10401, 5307, 4211, 4407, 0, 3180, 6912, 6879, 4455, 4934, 7548, 5841, 11674], [5203, 3183, 7200, 5195, 4681, 4879, 1737, 4711, 4449, 1250, 1228, 3841, 0, 2337, 4220, 2570, 1755, 4368, 2978, 5044], [3699, 2768, 10400, 4358, 6720, 5132, 3199, 2457, 5555, 3277, 1820, 6219, 2468, 0, 4472, 4059, 3178, 3507, 3231, 2838], [8672, 3421, 7013, 11100, 5360, 1596, 4167, 6309, 1083, 4246, 5172, 7802, 5434, 5142, 0, 2792, 3502, 4743, 2618, 6040], [7100, 2946, 7239, 7821, 4609, 3332, 2117, 6608, 4195, 1659, 3125, 4518, 2635, 4234, 2673, 0, 2026, 4267, 2142, 5510], [7360, 2246, 8400, 8021, 5770, 3426, 2021, 4997, 3850, 1732, 3026, 5679, 3796, 3830, 2768, 1555, 0, 3431, 1527, 4675], [8257, 3285, 10852, 10440, 9958, 4155, 4975, 5882, 4907, 5212, 5188, 11013, 5794, 4962, 3826, 5606, 4311, 0, 3596, 3872], [6615, 1365, 10143, 7275, 6771, 2852, 2111, 4252, 3606, 2189, 3116, 6151, 2929, 3085, 2524, 2327, 1446, 2686, 0, 3929], [4572, 3165, 15160, 7640, 9423, 5759, 4854, 2197, 6512, 4933, 3754, 10978, 5172, 2871, 5430, 5071, 4190, 1791, 4336, 0]]

        distancesMap = {}
        for i in range(len(points)):
            for j in range(len(points)):
                distancesMap[(points[i],points[j])]=distancesMatrix[i][j]

        return distancesMap
